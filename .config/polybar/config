[colors]
;background = ${xrdb:color0:#222}
background = ${xrdb:color0:#44242424}
background-alt = #444
;foreground = ${xrdb:color7:#222}
foreground = ${xrdb:color7:#dfdfdf}
foreground-alt = #555
primary = ${xrdb:color1:#cd304b}
secondary = ${xrdb:color2:#e60053}
alert = #fc5203
warning = #ffff26

; translucent (with some opacity)
translucent = #11ffffff

[globals]
fontsize = 12

[bar/dark]
; Put the bar at the bottom of the screen
bottom = false

; Prefer fixed center position for the `modules-center` block. 
; The center block will stay in the middle of the bar whenever
; possible. It can still be pushed around if other blocks need
; more space.
; When false, the center block is centered in the space between 
; the left and right block.
fixed-center = true

; Dimension defined as pixel value (e.g. 35) or percentage (e.g. 50%),
; the percentage can optionally be extended with a pixel offset like so:
; 50%:-10, this will result in a width or height of 50% minus 10 pixels
width=100%
height=25

; Offset defined as pixel value (e.g. 35) or percentage (e.g. 50%)
; the percentage can optionally be extended with a pixel offset like so:
; 50%:-10, this will result in an offset in the x or y direction 
; of 50% minus 10 pixels
offset-x = 0
offset-y = 0

; background = ${colors.background}
foreground = ${colors.foreground}
background = ${colors.translucent}
; background = #11ffffff

; Value used for drawing rounded corners
; Note: This shouldn't be used together with border-size because the border 
; doesn't get rounded. For this to work you may also need to enable 
; pseudo-transparency or use a compositor like compton.
; Individual top/bottom values can be defined using:
;   radius-{top,bottom}
radius = 6.0

; Fonts are defined using <font-name>;<vertical-offset>
; Font names are specified using a fontconfig pattern.
;   font-0 = NotoSans-Regular:size=8;2
;   font-1 = MaterialIcons:size=10
;   font-2 = Termsynu:size=8;-1
;   font-3 = FontAwesome:size=10
; See the Fonts wiki page for more details
font-0 = Cairo:size=13;3
font-1 = Material Design Icons:size=17;4
font-2 = Roboto:size=13;3
font-3 = DejaVu Sans Mono:size=35;4

; Modules are added to one of the available blocks
;   modules-left = cpu ram
;   modules-center = xwindow xbacklight
;   modules-right = ipc clock
modules-left = i3
modules-center = date
modules-right = alsa memory battery

; modules-right-background = #bbddee

line-size = 3
line-color = #f00

border-size = 4
border-color = #00000000

padding-left = 0
padding-right = 2

module-margin-left = 0
module-margin-right = 0
scroll-up = i3wm-wsnext
scroll-down = i3wm-wsprev

cursor-click = pointer
; cursor-scroll = ns-resize

; Position of the system tray window
; If empty or undefined, tray support will be disabled
; NOTE: A center aligned tray will cover center aligned modules
;
; Available positions:
;   left
;   center
;   right
;   none
tray-position = right
; tray-background = ${self.background}
tray-background = ${colors.foreground}
tray-margin = 0

; i3 module definition
[module/i3]
type = internal/i3
format = <label-state> <label-mode>
index-sort = true
wrapping-scroll = false

; Only show workspaces on the same output as the bar
;pin-workspaces = true

; label-mode-padding = 2
; label-mode-foreground = #134afb
; label-mode-background = ${colors.primary}

; focused = Active workspace on focused monitor
; label-focused = %index%
label-focused-background = ${colors.background-alt}
; label-focused-underline= ${colors.primary}
label-focused-padding = 2

; unfocused = Inactive workspace on any monitor
; label-unfocused = %index%
label-unfocused-padding = 2

; visible = Active workspace on unfocused monitor
label-visible = %index%
label-visible-background = ${self.label-focused-background}
; label-visible-underline = ${self.label-focused-underline}
label-visible-padding = ${self.label-focused-padding}

; urgent = Workspace with urgency hint set
; label-urgent = %index%
label-urgent-background = ${colors.alert}
label-urgent-padding = 2

; Separator in between workspaces
; label-separator = |


[module/battery]
type = internal/battery
battery = BAT0
adapter = ADP1
full-at = 98

format-charging = <animation-charging> <label-charging>
format-discharging = <ramp-capacity> <label-discharging>
label-full = %percentage%
format-charging-suffix = ◤
format-charging-foreground = ${colors.background}
format-charging-background = ${colors.foreground}

; Icons for battery when it's discharging
ramp-capacity-0 = 󰃸
ramp-capacity-0-foreground = ${colors.alert}
ramp-capacity-1 = 
ramp-capacity-1-foreground = ${colors.warning}
ramp-capacity-2 = 
ramp-capacity-3 = 
ramp-capacity-4 = 
ramp-capacity-5 = 
ramp-capacity-6 = 
ramp-capacity-7 = 
ramp-capacity-8 = 
ramp-capacity-9 = 
ramp-capacity-10 = 

format-discharging-foreground = ${colors.background}
format-discharging-background = ${colors.foreground}
format-discharging-suffix = ◤


label-discharging-foreground = ${colors.background}
label-discharging-background = ${colors.foreground}

; Animation icons while the battery is charging
animation-charging-0 = 
animation-charging-1 = 
animation-charging-2 = 
animation-charging-3 = 
animation-charging-4 = 
animation-charging-5 = 
animation-charging-6 = 
animation-charging-7 = 
animation-charging-8 = 
animation-charging-9 = 
animation-charging-10 = 
animation-charging-framerate = 750


[module/alsa]
type = internal/alsa

; Soundcard to be used
; Usually in the format hw:# where # is the card number
; You can find the different card numbers in `/proc/asound/cards`
master-soundcard = default
speaker-soundcard = default
headphone-soundcard = default

; Name of the master, speaker and headphone mixers
; Use the following command to list available mixer controls:
; $ amixer scontrols | sed -nr "s/.*'([[:alnum:]]+)'.*/\1/p"
; If master, speaker or headphone-soundcard isn't the default, 
; use `amixer -c # scontrols` instead where # is the number 
; of the master, speaker or headphone soundcard respectively
;
; Default: Master
master-mixer = Master

; Optionally define speaker and headphone mixers
; Default: none
speaker-mixer = Speaker
; Default: none
headphone-mixer = Headphone

; NOTE: This is required if headphone_mixer is defined
; Use the following command to list available device controls
; $ amixer controls | sed -r "/CARD/\!d; s/.*=([0-9]+).*name='([^']+)'.*/printf '%3.0f: %s\n' '\1' '\2'/e" | sort
; You may also need to use `amixer -c # controls` as above for the mixer names
; Default: none
headphone-id = 9

; Use volume mapping (similar to amixer -M and alsamixer), where the increase in volume is linear to the ear
; Default: false
mapped = true

; Interval for volume increase/decrease (in percent points)
; Default: 5
interval = 5

; Available tags:
;   <label-volume> (default)
;   <ramp-volume>
;   <bar-volume>
format-volume-prefix = ◢
format-volume-prefix-foreground = ${colors.foreground}
format-volume-prefix-background = ${colors.translucent}
format-volume = "<ramp-volume>"
format-volume-foreground = ${colors.background}
format-volume-background = ${colors.foreground}
format-volume-suffix = ◤
format-volume-suffix-foreground = ${colors.foreground}
format-volume-suffix-background = ${colors.translucent}

; format for muted icon
format-muted = <label-muted>
format-muted-foreground = ${colors.background}
format-muted-background = ${colors.foreground}
format-muted-prefix = ◢
format-muted-prefix-foreground = ${colors.foreground}
format-muted-prefix-background = ${colors.translucent}
format-muted-suffix = ◤
format-muted-suffix-foreground = ${colors.foreground}
format-muted-suffix-background = ${colors.translucent}


label-muted = " "

; Only applies if <ramp-volume> is used

ramp-volume-0 =  
ramp-volume-1 = 
ramp-volume-2 = 


[module/cpu]
type = internal/cpu

; Available tags:
;   <label> (default)
;   <bar-load>
;   <ramp-load>
;   <ramp-coreload>
format = "<label> "
format-foreground = ${colors.background}
format-background = ${colors.foreground}



; Available tokens:
;   %percentage% (default) - total cpu load averaged over all cores
;   %percentage-sum% - Cumulative load on all cores
;   %percentage-cores% - load percentage for each core
;   %percentage-core[1-9]% - load percentage for specific core
label =  %percentage%%

; Specify intervals to check processor load
interval = 10.0

[module/memory]
type = internal/memory

interval = 3

format = "   <label> "

format-prefix = ◢
format-prefix-background = ${colors.translucent}
format-prefix-foreground = ${colors.foreground}

format-foreground = ${colors.background}
format-background = ${colors.foreground}


[module/date]
type = internal/date

; Seconds to sleep between updates
; Default: 1.0
interval = 1.0

; See "http://en.cppreference.com/w/cpp/io/manip/put_time" for details on how to format the date string
; NOTE: if you want to use syntax tags here you need to use %%{...}
date = %a, %b %e%

; Optional time format
time = %H:%M

; if `date-alt` or `time-alt` is defined, clicking
; the module will toggle between formats
date-alt = %A, %d %B %Y
time-alt = %H:%M:%S

; Available tags:
;   <label> (default)
format-prefix = ◥
format-prefix-background = ${colors.translucent}
format-prefix-foreground = ${colors.foreground}
format-suffix = ◤
format-suffix-background = ${colors.translucent}
format-suffix-foreground = ${colors.foreground}
format = <label>
; format-background = #55ff3399
format-background = ${colors.foreground}
format-foreground = ${colors.background}

; Available tokens:
;   %date%
;   %time%
; Default: %date%
label = "%date% %time%"
label-font = 3
; label-foreground = #9A32DB
